#!/bin/sh

case "$1" in
	-g) flagsettings=$2; shift; shift ;;
	*)  flagsettings= ;;
esac

copy() {
	if [ -n "$WAYLAND_DISPLAY" ]; then
		wl-copy
	else
		xclip -i
	fi
}

paste() {
	if [ -n "$WAYLAND_DISPLAY" ]; then
		wl-paste
	else
		xclip -o
	fi
}

case "$1" in
	'') url=`paste` ;;
	*)  url=$1      ;;
esac

host=${url#*//}
if [ x"$host" = x"$url" ]; then
	proto=https:
else
	proto=${url%%//*}
fi
host=${host%%/*}
host=${host#*@}
host=${host%:*}
while :; do
	case "$host" in
		*.*.*)
			host=${host#*.}
			;;
		*)
			break
			;;
	esac
done
case "$proto" in
	https:)
		;;
	*)
		host=$proto//$host
		;;
esac
hostfile="$HOME/.sitepw.hosts/`printf '%s' "$host" | tr /: __`"

confsettings=`cat ~/.sitepw.conf 2>/dev/null`
hostsettings=`cat "$hostfile" 2>/dev/null`
settings="$confsettings $hostsettings $flagsettings"

alias=$host
generation=1
len=12
method=Argon2id-16Mx1
oldpw=false

for s in $settings; do
	k=${s%%=*}
	v=${s#*=}
	case "$k" in
		alias)
			alias=$v
			;;
		generation)
			generation=$v
			;;
		len)
			len=$v
			;;
		method)
			method=$v
			;;
		use_old_password)
			oldpw=true
			;;
		0)
			method=SHA1
			generation=$k
			;;
		[0-9]*)
			method=HMAC-SHA-256
			generation=$k
			;;
		a[0-9]*)
			method=Argon2id-16Mx1
			generation=${k#a}
			;;
	esac
done

{
	if [ x"$alias" != x"$host" ]; then
		printf 'alias=%s\n' "$alias"
	fi
	printf 'generation=%s\n' "$generation"
	printf 'len=%s\n' "$len"
	printf 'method=%s\n' "$method"
	if $oldpw; then
		printf 'use_old_password\n'
	fi
} > "$hostfile"

if $oldpw; then
	pw=`cat ~/.sitepw.old`
else
	pw=`cat ~/.sitepw`
fi

encode() {
	openssl base64 -e | cut -c 1-"$len"
}

generate() {
	case "$method" in
		SHA1)
			printf '%s#%s#%s#%s#%s\n' "$alias" "$pw" "$alias" "$pw" "$alias" | openssl sha1 -binary
			;;
		HMAC-SHA-256)
			printf '%s\n' "$alias" | openssl sha256 -hmac "$pw#$generation" -binary
			;;
		PBKDF2-SHA-256-10k)
			printf '%s' "$pw" | nettle-pbkdf2 --iterations=10000 --length=$(((len+1)*3/4)) --raw "$alias#$generation"
			;;
		Argon2id-1Mx16)
			printf '%s' "$pw" | argon2 "$alias#$generation#0.2078795763507619085469556198349787700338778416317696080751358830554198772854821397886002778654260353" -id -r -t 16 -m 10 -p 1 -l $(((len+1)*3/4)) | xxd -r -p
			;;
		Argon2id-4Mx3)
			printf '%s' "$pw" | argon2 "$alias#$generation#0.2078795763507619085469556198349787700338778416317696080751358830554198772854821397886002778654260353" -id -r -t 3 -m 12 -p 1 -l $(((len+1)*3/4)) | xxd -r -p
			;;
		Argon2id-16Mx1)
			printf '%s' "$pw" | argon2 "$alias#$generation#0.2078795763507619085469556198349787700338778416317696080751358830554198772854821397886002778654260353" -id -r -t 1 -m 14 -p 1 -l $(((len+1)*3/4)) | xxd -r -p
			;;
		*)
			printf >&2 'Unsupported method: %s\n' "$method"
			;;
	esac
}

opw=`generate | encode`

case "$1" in
	'')
		printf '%s' "$opw" | copy
		xmessage -timeout 2 -buttons OK "$host -> $opw"
		;;
	*)
		printf '%s\n' "$opw"
		;;
esac

